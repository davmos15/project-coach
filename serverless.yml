service: project-coach

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 256
  timeout: 30
  environment:
    NODE_ENV: ${self:provider.stage}
    STAGE: ${self:provider.stage}
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET}
    GOOGLE_REDIRECT_URI: ${env:GOOGLE_REDIRECT_URI}
    BASE_URL: ${env:BASE_URL}
    EMAIL_FROM: ${env:EMAIL_FROM}
    SENDGRID_API_KEY: ${env:SENDGRID_API_KEY}
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
            - secretsmanager:DescribeSecret
          Resource: "*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  # Main application handler for onboarding webpage
  app:
    handler: src/handlers/app.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

  # OAuth callback handler
  authCallback:
    handler: src/handlers/auth.callbackHandler
    events:
      - http:
          path: /auth/callback
          method: GET
          cors: true

  # Calendar webhook handler
  calendarWebhook:
    handler: src/handlers/webhook.calendarHandler
    events:
      - http:
          path: /webhook/calendar
          method: POST
          cors: true

  # Nightly scheduling function
  nightlyScheduler:
    handler: src/handlers/scheduler.nightlyHandler
    events:
      - schedule:
          rate: cron(0 4 * * ? *)
          enabled: true

  # Daily debrief email function
  dailyDebrief:
    handler: src/handlers/debrief.dailyHandler
    events:
      - schedule:
          rate: cron(0 9 * * ? *)
          enabled: true

  # Opportunity scheduler (triggered by calendar events)
  opportunityScheduler:
    handler: src/handlers/scheduler.opportunityHandler

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0